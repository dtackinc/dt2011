# script to take dt timing report and make gnuplot input
# usage: gplot1 file [file ...]
# gnuplot input consists of the files:
#   /tmp/gplot1.gplot   - use on gnuplot command line or in "load"
#   /tmp/gplotX.pts     - points on each curve X starting at 1
#   /tmp/gplotX.rng     - data range on each curve X starting at 1
# each unique combination of date, config, compiler and cpu makes a curve
# each different test id makes a different y label

if test $# -lt 2
then
  echo "gplot1.sh: argument count wrong"
  exit 1
fi

plot=$1
shift

gawk -v plot=$plot '
BEGIN {
  FS = "|"
  plot_ranges = 0
  pause_at_end = 0
  printf("plot <%s>\n", plot)
  gplot = "/tmp/gplot1.gplot"
  print "# generated by gplot script" > gplot
  if (plot == "pbm")
  {
    print "set term pbm small gray" >> gplot
  }
  else
  if (plot == "ps")
  {
    print "set term postscript eps mono \"Courier\" 14" >> gplot
    print "set size 1.2, 1.5" >> gplot
  }
  print "set nolabel" >> gplot
  print "set noyzeroaxis" >> gplot
  print "set noxzeroaxis" >> gplot
  print "set data style linespoints" >> gplot
  i = 0 
  k = 0
  wmin = 0
  wmax = 0
}
# ----------------------------------------------------------------------------
NF == 9 {
  date = $2
  test = $3
  config = $4
  compiler = $5
  cpu = $6
  utime = $7
  stime = $8
  wtime = $9

  env = sprintf("%8s %3s %-32s %-20s", date, config, compiler, cpu)

  if (plot[env] == "")
  {
    k++
    plot[env] = k
    points[k] = "/tmp/gplot" k ".pts"
    ranges[k] = "/tmp/gplot" k ".rng"
    title[k] = env
  }
 
  if (list[env test] == "")
  {
    i[env]++
    j = env i[env]
    list[env test] = j
    sum[j] = wtime
    min[j] = wtime
    max[j] = wtime
    label[j] = test
    n[j] = 1
  }
  else
  {
    j = list[env test]
    sum[j] += wtime
    if (wtime < min[j])
      min[j] = wtime
    if (wtime > max[j])
      max[j] = wtime
    n[j]++
  }
  if (wtime < wmin)
    wmin = wtime
  if (wtime > wmax)
    wmax = wtime
}
# ----------------------------------------------------------------------------
END {
  label_maxlen = 0
  for (m=1; m<=k; m++)
  {
    print "#" > points[m]
    print "#" > ranges[m]
    env = title[m]
    for (l=1; l<=i[env]; l++)
    {
      if (l > lmax)
        lmax = l
      j = env l
      if (length(label[j]) > label_maxlen)
        label_maxlen = length(label[j])
      print "set label \"" label[j] "\" at 0," l " right" >> gplot
      print sum[j]/n[j] " " l >> points[m]
      print min[j] " " l >> ranges[m]
      print max[j] " " l >> ranges[m]
      print              >> ranges[m]
    }
    printf("curve %d: %3d timings\n", m, i[env]);
  }


  wmin -= (wmax - wmin) * label_maxlen / 55;
  if (wmax < 5)
    wincr = 0.5;
  else
  if (wmax < 10)
    wincr = 1;
  else
    wincr = int(wmax / 10);

  print "set xtics 0, " wincr >> gplot
  print "set noytics" >> gplot


  hmin = -(lmax / 10);
  hmax = lmax + 3 * (lmax / 10);
  printf("plot [%f:%f] [%f:%f] ", wmin, wmax, hmin, hmax) >> gplot
  for (m=1; m<=k; m++)
  {
    if (m > 1)
      printf(",") >> gplot
    printf("\"%s\" title \"%s\"",
      points[m], title[m]) >> gplot
    if (plot_ranges)
      printf(", \"%s\" title \"\"", ranges[m]) >> gplot
  }

  print >> gplot

  if (pause_at_end)
    print "pause -1 \"hit enter\"" >> gplot

}' $@ 



