# usage: aplot1 file [file ...]

if test $# -lt 2
then
  echo "aplot1.sh: argument count wrong"
  exit 1
fi

plot=$1
shift

gawk -v plot=$plot '
BEGIN {
  FS = "|"
  plot_ranges = 0
  pause_at_end = 0
  aplot = "/tmp/aplot1.aplot"
  printf("Generated by %s\n", "dt/sh/aplot1.sh") > aplot
  print >> aplot
  print >> aplot
 
  i = 0 
  k = 0
  wmin = 0
  wmax = 0
  ntests = 0
  nenvs = 0
  label_length = 0
  symbols = "+-.~#>=:"
  blanks = "                                                                 "
  scales[nscales++] = 1.0;
  scales[nscales++] = 2.0;
  scales[nscales++] = 5.0;
  scales[nscales++] = 10.0;
  scales[nscales++] = 20.0;
  scales[nscales++] = 100.0;
}
# ----------------------------------------------------------------------------
NF == 9 {
  date = $2
  test = $3
  config = $4
  compiler = $5
  cpu = $6
  utime = $7
  stime = $8
  wtime = $9

  env = sprintf("%s %s %s %s", date, config, compiler, cpu)

  if (tests[test] == "")
  {
    itests[ntests++] = test
    tests[test] = 1
  }
  if (envs[env] == "")
  {
    ienvs[nenvs] = env
    envs[env] = substr(symbols, 1+nenvs++, 1)
  }
  wtimes[env test] = wtime;
}
# ----------------------------------------------------------------------------
END {
  label_maxlen = 0
  for (ienv=0; ienv<nenvs; ienv++)
  {
    env = ienvs[ienv]
    printf("%s %-32s\n", envs[env], env) >> aplot
  }

  print >> aplot
  print >> aplot

  for (itest=0; itest<ntests; itest++)
  {
    test = itests[itest]
    if (length(test) > label_length)
       label_length = length(test)
  }

  for (itest=0; itest<ntests; itest++)
  {
    test = itests[itest]
    printf("%s\n", test) >> aplot
    wmax = 0;
    for (ienv=0; ienv<nenvs; ienv++)
    {
      env = ienvs[ienv]
      if (wtimes[env test] > wmax)
        wmax = wtimes[env test]
    }

    for (scale=0; scale<nscales; scale++)
      if (wmax < scales[scale])
      {
        wmax = scales[scale];
        break;
      }
    
    for (ienv=0; ienv<nenvs; ienv++)
    {
      env = ienvs[ienv]
      w = 80 * wtimes[env test] / wmax
      printf("%s", substr(blanks, 1, label_length+1)) >> aplot
      printf("%s ", wtimes[env test]) >> aplot
      while(w > 0)
      {
        printf("%s", envs[env]) >> aplot
        w--
      }
      print >> aplot
    }
  }

  wmin -= (wmax - wmin) * label_maxlen / 55;
  if (wmax < 5)
    wincr = 0.5;
  else
  if (wmax < 10)
    wincr = 1;
  else
    wincr = int(wmax / 10);

  hmin = -(lmax / 10);
  hmax = lmax + 3 * (lmax / 10);

  print >> aplot

  if (pause_at_end)
    print "pause -1 \"hit enter\"" >> aplot

}' $@ 

