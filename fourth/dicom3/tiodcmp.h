/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
  ! Copyright (C) 1998 Dtack Inc. All Rights Reserved
  ! To use this file, you must have signed a license agreement with Dtack Inc.
  ! Under no circumstances may you redistribute this file.
  ! This software is provided AS IS with no warranty expressed or implied.
  ! Dtack Inc. accepts no liability for use or misuse of this file.
  ! http://www.dtack.com  dtack@dtack.com  telephone +360.417.6700
  ! Dtack Inc, P.O. Box 3061, Port Angeles, WA USA 98362
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! */




// Automatically generated from template - EDITS WILL BE LOST

// Generated by iodcmp.awk with options header

#ifndef _DC3tiodcmp_HEADER_
#define _DC3tiodcmp_HEADER_

class DC3CompositeIOD_CRImage : public DC3CompositeIOD {
	DC3Module_Patient *Patient;
	DC3Module_GeneralStudy *GeneralStudy;
	DC3Module_PatientStudy *PatientStudy;
	DC3Module_GeneralSeries *GeneralSeries;
	DC3Module_CRSeries *CRSeries;
	DC3Module_GeneralEquipment *GeneralEquipment;
	DC3Module_GeneralImage *GeneralImage;
	DC3Module_ImagePixel *ImagePixel;
	DC3Module_ContrastBolus *ContrastBolus;
	DC3Module_CRImage *CRImage;
	DC3Module_OverlayPlane *OverlayPlane;
	DC3Module_Curve *Curve;
	DC3Module_ModalityLUT *ModalityLUT;
	DC3Module_VOILUT *VOILUT;
	DC3Module_SOPCommon *SOPCommon;
public:
	DC3CompositeIOD_CRImage(DC3ListofAttributes *list);
	char *Identify(void);
	void  Put(ostream& stream);
};

class DC3CompositeIOD_CTImage : public DC3CompositeIOD {
	DC3Module_Patient *Patient;
	DC3Module_GeneralStudy *GeneralStudy;
	DC3Module_PatientStudy *PatientStudy;
	DC3Module_GeneralSeries *GeneralSeries;
	DC3Module_FrameOfReference *FrameOfReference;
	DC3Module_GeneralEquipment *GeneralEquipment;
	DC3Module_GeneralImage *GeneralImage;
	DC3Module_ImagePlane *ImagePlane;
	DC3Module_ImagePixel *ImagePixel;
	DC3Module_ContrastBolus *ContrastBolus;
	DC3Module_CTImage *CTImage;
	DC3Module_OverlayPlane *OverlayPlane;
	DC3Module_VOILUT *VOILUT;
	DC3Module_SOPCommon *SOPCommon;
public:
	DC3CompositeIOD_CTImage(DC3ListofAttributes *list);
	char *Identify(void);
	void  Put(ostream& stream);
};

class DC3CompositeIOD_MRImage : public DC3CompositeIOD {
	DC3Module_Patient *Patient;
	DC3Module_GeneralStudy *GeneralStudy;
	DC3Module_PatientStudy *PatientStudy;
	DC3Module_GeneralSeries *GeneralSeries;
	DC3Module_FrameOfReference *FrameOfReference;
	DC3Module_GeneralEquipment *GeneralEquipment;
	DC3Module_GeneralImage *GeneralImage;
	DC3Module_ImagePlane *ImagePlane;
	DC3Module_ImagePixel *ImagePixel;
	DC3Module_ContrastBolus *ContrastBolus;
	DC3Module_MRImage *MRImage;
	DC3Module_OverlayPlane *OverlayPlane;
	DC3Module_VOILUT *VOILUT;
	DC3Module_SOPCommon *SOPCommon;
public:
	DC3CompositeIOD_MRImage(DC3ListofAttributes *list);
	char *Identify(void);
	void  Put(ostream& stream);
};

class DC3CompositeIOD_NMImage : public DC3CompositeIOD {
	DC3Module_Patient *Patient;
	DC3Module_GeneralStudy *GeneralStudy;
	DC3Module_PatientStudy *PatientStudy;
	DC3Module_GeneralSeries *GeneralSeries;
	DC3Module_NMSeries *NMSeries;
	DC3Module_FrameOfReference *FrameOfReference;
	DC3Module_GeneralEquipment *GeneralEquipment;
	DC3Module_NMEquipment *NMEquipment;
	DC3Module_GeneralImage *GeneralImage;
	DC3Module_ImagePlane *ImagePlane;
	DC3Module_ImagePixel *ImagePixel;
	DC3Module_Cine *Cine;
	DC3Module_MultiFrame *MultiFrame;
	DC3Module_NMImage *NMImage;
	DC3Module_NMSPECTAcquisitionImage *NMSPECTAcquisitionImage;
	DC3Module_NMMultiGatedAcquisitionImage *NMMultiGatedAcquisitionImage;
	DC3Module_OverlayPlane *OverlayPlane;
	DC3Module_MultiFrameOverlay *MultiFrameOverlay;
	DC3Module_Curve *Curve;
	DC3Module_VOILUT *VOILUT;
	DC3Module_SOPCommon *SOPCommon;
public:
	DC3CompositeIOD_NMImage(DC3ListofAttributes *list);
	char *Identify(void);
	void  Put(ostream& stream);
};

class DC3CompositeIOD_NMOverlay : public DC3CompositeIOD {
	DC3Module_Patient *Patient;
	DC3Module_GeneralStudy *GeneralStudy;
	DC3Module_PatientStudy *PatientStudy;
	DC3Module_GeneralSeries *GeneralSeries;
	DC3Module_NMSeries *NMSeries;
	DC3Module_FrameOfReference *FrameOfReference;
	DC3Module_GeneralEquipment *GeneralEquipment;
	DC3Module_NMEquipment *NMEquipment;
	DC3Module_OverlayIdentification *OverlayIdentification;
	DC3Module_OverlayPlane *OverlayPlane;
	DC3Module_MultiFrameOverlay *MultiFrameOverlay;
	DC3Module_SOPCommon *SOPCommon;
public:
	DC3CompositeIOD_NMOverlay(DC3ListofAttributes *list);
	char *Identify(void);
	void  Put(ostream& stream);
};

class DC3CompositeIOD_NMCurve : public DC3CompositeIOD {
	DC3Module_Patient *Patient;
	DC3Module_GeneralStudy *GeneralStudy;
	DC3Module_PatientStudy *PatientStudy;
	DC3Module_GeneralSeries *GeneralSeries;
	DC3Module_NMSeries *NMSeries;
	DC3Module_FrameOfReference *FrameOfReference;
	DC3Module_GeneralEquipment *GeneralEquipment;
	DC3Module_NMEquipment *NMEquipment;
	DC3Module_CurveIdentification *CurveIdentification;
	DC3Module_Curve *Curve;
	DC3Module_SOPCommon *SOPCommon;
public:
	DC3CompositeIOD_NMCurve(DC3ListofAttributes *list);
	char *Identify(void);
	void  Put(ostream& stream);
};

class DC3CompositeIOD_USImage : public DC3CompositeIOD {
	DC3Module_Patient *Patient;
	DC3Module_GeneralStudy *GeneralStudy;
	DC3Module_PatientStudy *PatientStudy;
	DC3Module_GeneralSeries *GeneralSeries;
	DC3Module_FrameOfReference *FrameOfReference;
	DC3Module_USFrameOfReference *USFrameOfReference;
	DC3Module_GeneralEquipment *GeneralEquipment;
	DC3Module_GeneralImage *GeneralImage;
	DC3Module_ImagePixel *ImagePixel;
	DC3Module_ContrastBolus *ContrastBolus;
	DC3Module_USRegionCalibration *USRegionCalibration;
	DC3Module_USImage *USImage;
	DC3Module_OverlayPlane *OverlayPlane;
	DC3Module_VOILUT *VOILUT;
	DC3Module_SOPCommon *SOPCommon;
public:
	DC3CompositeIOD_USImage(DC3ListofAttributes *list);
	char *Identify(void);
	void  Put(ostream& stream);
};

class DC3CompositeIOD_USCurve : public DC3CompositeIOD {
	DC3Module_Patient *Patient;
	DC3Module_GeneralStudy *GeneralStudy;
	DC3Module_PatientStudy *PatientStudy;
	DC3Module_GeneralSeries *GeneralSeries;
	DC3Module_FrameOfReference *FrameOfReference;
	DC3Module_USFrameOfReference *USFrameOfReference;
	DC3Module_GeneralEquipment *GeneralEquipment;
	DC3Module_CurveIdentification *CurveIdentification;
	DC3Module_Curve *Curve;
	DC3Module_Audio *Audio;
	DC3Module_SOPCommon *SOPCommon;
public:
	DC3CompositeIOD_USCurve(DC3ListofAttributes *list);
	char *Identify(void);
	void  Put(ostream& stream);
};

class DC3CompositeIOD_USMultiFrameImage : public DC3CompositeIOD {
	DC3Module_Patient *Patient;
	DC3Module_GeneralStudy *GeneralStudy;
	DC3Module_PatientStudy *PatientStudy;
	DC3Module_GeneralSeries *GeneralSeries;
	DC3Module_FrameOfReference *FrameOfReference;
	DC3Module_USFrameOfReference *USFrameOfReference;
	DC3Module_GeneralEquipment *GeneralEquipment;
	DC3Module_GeneralImage *GeneralImage;
	DC3Module_ImagePixel *ImagePixel;
	DC3Module_ContrastBolus *ContrastBolus;
	DC3Module_Cine *Cine;
	DC3Module_MultiFrame *MultiFrame;
	DC3Module_USRegionCalibration *USRegionCalibration;
	DC3Module_USImage *USImage;
	DC3Module_VOILUT *VOILUT;
	DC3Module_SOPCommon *SOPCommon;
public:
	DC3CompositeIOD_USMultiFrameImage(DC3ListofAttributes *list);
	char *Identify(void);
	void  Put(ostream& stream);
};

class DC3CompositeIOD_USMultiFrameCurve : public DC3CompositeIOD {
	DC3Module_Patient *Patient;
	DC3Module_GeneralStudy *GeneralStudy;
	DC3Module_PatientStudy *PatientStudy;
	DC3Module_GeneralSeries *GeneralSeries;
	DC3Module_FrameOfReference *FrameOfReference;
	DC3Module_USFrameOfReference *USFrameOfReference;
	DC3Module_GeneralEquipment *GeneralEquipment;
	DC3Module_CurveIdentification *CurveIdentification;
	DC3Module_Curve *Curve;
	DC3Module_Audio *Audio;
	DC3Module_SOPCommon *SOPCommon;
public:
	DC3CompositeIOD_USMultiFrameCurve(DC3ListofAttributes *list);
	char *Identify(void);
	void  Put(ostream& stream);
};

class DC3CompositeIOD_SCImage : public DC3CompositeIOD {
	DC3Module_Patient *Patient;
	DC3Module_GeneralStudy *GeneralStudy;
	DC3Module_PatientStudy *PatientStudy;
	DC3Module_GeneralSeries *GeneralSeries;
	DC3Module_GeneralEquipment *GeneralEquipment;
	DC3Module_SCImageEquipment *SCImageEquipment;
	DC3Module_GeneralImage *GeneralImage;
	DC3Module_ImagePixel *ImagePixel;
	DC3Module_SCImage *SCImage;
	DC3Module_OverlayPlane *OverlayPlane;
	DC3Module_ModalityLUT *ModalityLUT;
	DC3Module_VOILUT *VOILUT;
	DC3Module_SOPCommon *SOPCommon;
public:
	DC3CompositeIOD_SCImage(DC3ListofAttributes *list);
	char *Identify(void);
	void  Put(ostream& stream);
};

class DC3CompositeIOD_StandaloneOverlay : public DC3CompositeIOD {
	DC3Module_Patient *Patient;
	DC3Module_GeneralStudy *GeneralStudy;
	DC3Module_PatientStudy *PatientStudy;
	DC3Module_GeneralSeries *GeneralSeries;
	DC3Module_GeneralEquipment *GeneralEquipment;
	DC3Module_OverlayIdentification *OverlayIdentification;
	DC3Module_OverlayPlane *OverlayPlane;
	DC3Module_SOPCommon *SOPCommon;
public:
	DC3CompositeIOD_StandaloneOverlay(DC3ListofAttributes *list);
	char *Identify(void);
	void  Put(ostream& stream);
};

class DC3CompositeIOD_StandaloneCurve : public DC3CompositeIOD {
	DC3Module_Patient *Patient;
	DC3Module_GeneralStudy *GeneralStudy;
	DC3Module_PatientStudy *PatientStudy;
	DC3Module_GeneralSeries *GeneralSeries;
	DC3Module_GeneralEquipment *GeneralEquipment;
	DC3Module_CurveIdentification *CurveIdentification;
	DC3Module_Curve *Curve;
	DC3Module_SOPCommon *SOPCommon;
public:
	DC3CompositeIOD_StandaloneCurve(DC3ListofAttributes *list);
	char *Identify(void);
	void  Put(ostream& stream);
};

class DC3CompositeIOD_BasicStudyDescriptor : public DC3CompositeIOD {
	DC3Module_PatientSummary *PatientSummary;
	DC3Module_StudyContent *StudyContent;
	DC3Module_SOPCommon *SOPCommon;
public:
	DC3CompositeIOD_BasicStudyDescriptor(DC3ListofAttributes *list);
	char *Identify(void);
	void  Put(ostream& stream);
};

class DC3CompositeIOD_StandaloneModalityLUT : public DC3CompositeIOD {
	DC3Module_Patient *Patient;
	DC3Module_GeneralStudy *GeneralStudy;
	DC3Module_PatientStudy *PatientStudy;
	DC3Module_GeneralSeries *GeneralSeries;
	DC3Module_GeneralEquipment *GeneralEquipment;
	DC3Module_ModalityLUT *ModalityLUT;
	DC3Module_LUTIdentification *LUTIdentification;
	DC3Module_SOPCommon *SOPCommon;
public:
	DC3CompositeIOD_StandaloneModalityLUT(DC3ListofAttributes *list);
	char *Identify(void);
	void  Put(ostream& stream);
};

class DC3CompositeIOD_StandaloneVOILUT : public DC3CompositeIOD {
	DC3Module_Patient *Patient;
	DC3Module_GeneralStudy *GeneralStudy;
	DC3Module_PatientStudy *PatientStudy;
	DC3Module_GeneralSeries *GeneralSeries;
	DC3Module_GeneralEquipment *GeneralEquipment;
	DC3Module_VOILUT *VOILUT;
	DC3Module_LUTIdentification *LUTIdentification;
	DC3Module_SOPCommon *SOPCommon;
public:
	DC3CompositeIOD_StandaloneVOILUT(DC3ListofAttributes *list);
	char *Identify(void);
	void  Put(ostream& stream);
};


#endif /* _DC3tiodcmp_HEADER_ */





/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
  ! Copyright (C) 1998 Dtack Inc. All Rights Reserved
  ! To use this file, you must have signed a license agreement with Dtack Inc.
  ! Under no circumstances may you redistribute this file.
  ! This software is provided AS IS with no warranty expressed or implied.
  ! Dtack Inc. accepts no liability for use or misuse of this file.
  ! http://www.dtack.com  dtack@dtack.com  telephone +360.417.6700
  ! Dtack Inc, P.O. Box 3061, Port Angeles, WA USA 98362
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! */
