/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
  ! Copyright (C) 1998 Dtack Inc. All Rights Reserved
  ! To use this file, you must have signed a license agreement with Dtack Inc.
  ! Under no circumstances may you redistribute this file.
  ! This software is provided AS IS with no warranty expressed or implied.
  ! Dtack Inc. accepts no liability for use or misuse of this file.
  ! http://www.dtack.com  dtack@dtack.com  telephone +360.417.6700
  ! Dtack Inc, P.O. Box 3061, Port Angeles, WA USA 98362
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! */




#ifndef DT_H_INCLUDED
#include <dtack/base.h>
#endif
#define DTWIN_R_QUERY_STOP "DTWIN_R_QUERY_STOP"
#define DTWIN_R_ENDIAN (0x11223344L)


/* #include <rpc/types.h>
   This file is needed by dtwin_r.h when the platform does not have rpc.
   It is needed because dtwin_r.h is generated by rpcgen which always
   puts in a #include for this file.

   All windows communications implementations use dtwin_r.h for their 
   structure declarations, even though some implementations don't actually
   use rpc calls.
 */

#define bool_t long
#define u_int unsigned long
#define u_long unsigned long
/* end of <rpc/types.h> */


struct dtwin_r_state_t {
	int x0;
	int y0;
	int xe;
	int ye;
	int bits;
	long recv_max;
};
typedef struct dtwin_r_state_t dtwin_r_state_t;
bool_t xdr_dtwin_r_state_t();


struct dtwin_r_create_window_arg_t {
	long endian;
	char name[DT_WINDOWNAME_MAXLEN];
	int x0;
	int y0;
	int xe;
	int ye;
	int bits;
};
typedef struct dtwin_r_create_window_arg_t dtwin_r_create_window_arg_t;
bool_t xdr_dtwin_r_create_window_arg_t();


struct dtwin_r_create_window_ret_t {
	int rc;
};
typedef struct dtwin_r_create_window_ret_t dtwin_r_create_window_ret_t;
bool_t xdr_dtwin_r_create_window_ret_t();


struct dtwin_r_export_data_arg_t {
	long endian;
	char name[DT_WINDOWNAME_MAXLEN];
	int x0;
	int y0;
	int xe;
	int ye;
	int bits;
	struct {
		u_int d_len;
		char *d_val;
	} d;
};
typedef struct dtwin_r_export_data_arg_t dtwin_r_export_data_arg_t;
bool_t xdr_dtwin_r_export_data_arg_t();


struct dtwin_r_export_data_ret_t {
	int rc;
};
typedef struct dtwin_r_export_data_ret_t dtwin_r_export_data_ret_t;
bool_t xdr_dtwin_r_export_data_ret_t();


struct dtwin_r_export_color_arg_t {
	long endian;
	char name[DT_WINDOWNAME_MAXLEN];
	int start;
	int count;
	struct {
		u_int d_len;
		char *d_val;
	} d;
};
typedef struct dtwin_r_export_color_arg_t dtwin_r_export_color_arg_t;
bool_t xdr_dtwin_r_export_color_arg_t();


struct dtwin_r_export_color_ret_t {
	int rc;
};
typedef struct dtwin_r_export_color_ret_t dtwin_r_export_color_ret_t;
bool_t xdr_dtwin_r_export_color_ret_t();


struct dtwin_r_import_data_arg_t {
	long endian;
	char name[DT_WINDOWNAME_MAXLEN];
	int x0;
	int y0;
	int xe;
	int ye;
};
typedef struct dtwin_r_import_data_arg_t dtwin_r_import_data_arg_t;
bool_t xdr_dtwin_r_import_data_arg_t();


struct dtwin_r_import_data_ret_t {
	int rc;
	struct {
		u_int d_len;
		char *d_val;
	} d;
};
typedef struct dtwin_r_import_data_ret_t dtwin_r_import_data_ret_t;
bool_t xdr_dtwin_r_import_data_ret_t();


struct dtwin_r_import_color_arg_t {
	long endian;
	char name[DT_WINDOWNAME_MAXLEN];
	int start;
	int count;
};
typedef struct dtwin_r_import_color_arg_t dtwin_r_import_color_arg_t;
bool_t xdr_dtwin_r_import_color_arg_t();


struct dtwin_r_import_color_ret_t {
	int rc;
	struct {
		u_int d_len;
		char *d_val;
	} d;
};
typedef struct dtwin_r_import_color_ret_t dtwin_r_import_color_ret_t;
bool_t xdr_dtwin_r_import_color_ret_t();


struct dtwin_r_query_arg_t {
	long endian;
	char name[DT_WINDOWNAME_MAXLEN];
};
typedef struct dtwin_r_query_arg_t dtwin_r_query_arg_t;
bool_t xdr_dtwin_r_query_arg_t();


struct dtwin_r_query_ret_t {
	int rc;
	dtwin_r_state_t state;
};
typedef struct dtwin_r_query_ret_t dtwin_r_query_ret_t;
bool_t xdr_dtwin_r_query_ret_t();


#define DTWIN_R_PROGRAM ((u_long)0x20005700)
#define DTWIN_R_VERSION ((u_long)1)
#define DTWIN_R_CREATE_WINDOW ((u_long)11)
extern dtwin_r_create_window_ret_t *dtwin_r_create_window_1();
#define DTWIN_R_EXPORT_DATA ((u_long)12)
extern dtwin_r_export_data_ret_t *dtwin_r_export_data_1();
#define DTWIN_R_EXPORT_COLOR ((u_long)13)
extern dtwin_r_export_color_ret_t *dtwin_r_export_color_1();
#define DTWIN_R_IMPORT_DATA ((u_long)14)
extern dtwin_r_import_data_ret_t *dtwin_r_import_data_1();
#define DTWIN_R_IMPORT_COLOR ((u_long)15)
extern dtwin_r_import_color_ret_t *dtwin_r_import_color_1();
#define DTWIN_R_QUERY ((u_long)17)
extern dtwin_r_query_ret_t *dtwin_r_query_1();






/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
  ! Copyright (C) 1998 Dtack Inc. All Rights Reserved
  ! To use this file, you must have signed a license agreement with Dtack Inc.
  ! Under no circumstances may you redistribute this file.
  ! This software is provided AS IS with no warranty expressed or implied.
  ! Dtack Inc. accepts no liability for use or misuse of this file.
  ! http://www.dtack.com  dtack@dtack.com  telephone +360.417.6700
  ! Dtack Inc, P.O. Box 3061, Port Angeles, WA USA 98362
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! */
