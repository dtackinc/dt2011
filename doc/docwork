;; forms-demo -- demo forms-mode 	-*- forms -*- emacs-lisp 

;; Set the name of the data file.
(setq forms-file "doclist.dat")
(setq forms-rw-face 'default)

;; Use 'forms-enumerate' to set field names and number thereof.
(setq forms-number-of-fields
      (forms-enumerate
       '(
doclist-partno
doclist-title
doclist-revision
doclist-id
doclist-source
doclist-comment

doclist-completeness
doclist-text
doclist-sections
doclist-figures
doclist-functions
doclist-examples
doclist-seealsos
doclist-index
doclist-asides
doclist-links

doclist-samples
doclist-statements
doclist-eloquence
doclist-grammar
doclist-spelling

doclist-utopia-topology
doclist-utopia-toc
doclist-utopia-headers
doclist-utopia-figs
doclist-utopia-refs
doclist-utopia-index
doclist-utopia-asides
doclist-utopia-hypers

doclist-modern-topology
doclist-modern-toc
doclist-modern-headers
doclist-modern-figs
doclist-modern-refs
doclist-modern-index
doclist-modern-asides
doclist-modern-hypers

doclist-html-topology
doclist-html-toc
doclist-html-headers
doclist-html-figs
doclist-html-refs
doclist-html-index
doclist-html-asides
doclist-html-hypers

doclist-info-topology
doclist-info-toc
doclist-info-headers
doclist-info-figs
doclist-info-refs
doclist-info-index
doclist-info-asides
doclist-info-hypers

doclist-man-topology
doclist-man-toc
doclist-man-headers
doclist-man-figs
doclist-man-refs
doclist-man-index
doclist-man-asides
doclist-man-hypers

doclist-text-topology
doclist-text-toc
doclist-text-headers
doclist-text-figs
doclist-text-refs
doclist-text-index
doclist-text-asides
doclist-text-hypers

doclist-winhelp-topology
doclist-winhelp-toc
doclist-winhelp-headers
doclist-winhelp-figs
doclist-winhelp-refs
doclist-winhelp-index
doclist-winhelp-asides
doclist-winhelp-hypers

doclist-parent
doclist-reserved1
       )))

;; The following functions are used by this form for layout purposes.
;;
(defun doclist-tocol (target &optional fill)
  "Produces a string to skip to column TARGET. Prepends newline if needed.
The optional FILL should be a character, used to fill to the column."
  (if (null fill)
      (setq fill ? ))
  (if (< target (current-column))
      (concat "\n" (make-string target fill))
    (make-string (- target (current-column)) fill)))
;;
(defun doclist-rj (target field &optional fill) 
  "Produces a string to skip to column TARGET minus the width of field FIELD.
Prepends newline if needed. The optional FILL should be a character,
used to fill to the column."
  (doclist-tocol (- target (length (nth field forms-fields))) fill))

(defun biblio-new-record-filter (the-record)
  "Form a new record with some defaults."
  (let ((i 1)) 
    (while (< i forms-number-of-fields) ;; (length forms--markers))  
      (aset the-record i "_")
      (setq i (1+ i))
    )
  )
  the-record				; return it
)
(setq forms-new-record-filter 'biblio-new-record-filter)

;; The format list.
(setq forms-format-list
     '(
        "====== doc ======\n\n"
        "partno:    " doclist-partno            "\n"
        "title:     " doclist-title             "\n"
        "revision:  " doclist-revision          "\n"
        "source:    " doclist-source            "\n"
        "id:        " doclist-id                "\n"
        "parent:    " doclist-parent            "\n"
        "comment:   " doclist-comment           "\n"
                                                "\n"
        "COMPLETENESS " doclist-completeness    "\n"
	"  text:      " doclist-text            "\n"
	"  sections:  " doclist-sections        "\n"
	"  figures:   " doclist-figures         "\n"
	"  functions: " doclist-functions       "\n"
	"  examples:  " doclist-examples        "\n"
	"  seealsos:  " doclist-seealsos        "\n"
	"  index:     " doclist-index           "\n"
	"  asides:    " doclist-asides          "\n"
	"  links:     " doclist-links           "\n"
                                                "\n"
        "CORRECTNESS   "                        "\n"
	"  samples:      " doclist-samples      "\n"
	"  statements:   " doclist-statements   "\n"
	"  eloquence:    " doclist-eloquence    "\n"
	"  grammar:      " doclist-grammar      "\n"
	"  spelling:     " doclist-spelling     "\n"
                                                "\n"
        "Latex Utopia " doclist-utopia-topology "\n"
        "  toc: " doclist-utopia-toc   
        "  headers: " doclist-utopia-headers
        "  figs: " doclist-utopia-figs
        "  refs: " doclist-utopia-refs
        "  index: " doclist-utopia-index
        "  asides: " doclist-utopia-asides
        "  hypers: " doclist-utopia-hypers
                                                         "\n"
                                                         "\n"
        "Latex Computer Modern " doclist-modern-topology "\n"
        "  toc: " doclist-modern-toc   
        "  headers: " doclist-modern-headers
        "  figs: " doclist-modern-figs
        "  refs: " doclist-modern-refs
        "  index: " doclist-modern-index
        "  asides: " doclist-modern-asides
        "  hypers: " doclist-modern-hypers
                                                         "\n"
                                                         "\n"
        "HTML " doclist-html-topology                    "\n"
        "  toc: " doclist-html-toc   
        "  headers: " doclist-html-headers
        "  figs: " doclist-html-figs
        "  refs: " doclist-html-refs
        "  index: " doclist-html-index
        "  asides: " doclist-html-asides
        "  hypers: " doclist-html-hypers
                                                        "\n"
                                                        "\n"
        "GNU Info " doclist-info-topology               "\n"
        "  toc: " doclist-info-toc   
        "  headers: " doclist-info-headers
        "  figs: " doclist-info-figs
        "  refs: " doclist-info-refs
        "  index: " doclist-info-index
        "  asides: " doclist-info-asides
        "  hypers: " doclist-info-hypers
                                                        "\n"
                                                        "\n"
        "Unix Man Pages " doclist-man-topology          "\n"
        "  toc: " doclist-man-toc   
        "  headers: " doclist-man-headers
        "  figs: " doclist-man-figs
        "  refs: " doclist-man-refs
        "  index: " doclist-man-index
        "  asides: " doclist-man-asides
        "  hypers: " doclist-man-hypers
                                                        "\n"
                                                        "\n"
        "ASCII text" doclist-text-topology              "\n"
        "  toc: " doclist-text-toc   
        "  headers: " doclist-text-headers
        "  figs: " doclist-text-figs
        "  refs: " doclist-text-refs
        "  index: " doclist-text-index
        "  asides: " doclist-text-asides
        "  hypers: " doclist-text-hypers   
                                                       "\n"
                                                       "\n"
        "Windows 3.1 Help " doclist-winhelp-topology   "\n"
        "  toc: " doclist-winhelp-toc   
        "  headers: " doclist-winhelp-headers
        "  figs: " doclist-winhelp-figs
        "  refs: " doclist-winhelp-refs
        "  index: " doclist-winhelp-index
        "  asides: " doclist-winhelp-asides
        "  hypers: " doclist-winhelp-hypers
                                                        "\n"
                                                        "\n"
        "Reserved "  doclist-reserved1                  "\n"
        "END"
     ))

;; That's all, folks!
